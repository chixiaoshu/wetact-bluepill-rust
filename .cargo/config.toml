[target.'cfg(all(target_arch = "arm", target_os = "none"))']
# runner = "probe-rs run --chip stm32f103CB"
# runner = "probe-rs reset --chip stm32f103CB"
# runner = "cargo flash --chip stm32f103CB"
runner = "probe-rs run --chip STM32F103CBTx"

[build]
# Always compile for the instruction set of the STM32F1
target = "thumbv7m-none-eabi"

# use the Tlink.x script from the cortex-m-rt crate
rustflags = [
  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=-Tlink.x",
  # "-C", "link-arg=-Tdefmt.x",
  # "-C", "link-arg=-Tstlog.x",

  # if you run into problems with LLD switch to the GNU linker by commenting out
  # this line
  # "-C", "linker=arm-none-eabi-ld",

  # if you need to link to pre-compiled C libraries provided by a C toolchain
  # use GCC as the linker by commenting out both lines above and then
  # uncommenting the three lines below
  # "-C", "linker=arm-none-eabi-gcc",
  # "-C", "link-arg=-Wl,-Tlink.x",
  # "-C", "link-arg=-nostartfiles",
]

[env]
DEFMT_LOG = "info"